ARG VCS_REF
FROM docker.io/arm64v8/python:3.9-slim-bullseye as base
ARG VCS_REF
ENV PYTHONDONTWRITEBYTECODE 1
# Enable fault handler
ENV PYTHONFAULTHANDLER 1
### Install python dependencies in /.venv
COPY Pipfile Pipfile.lock .

RUN \
  set -ex && \
  pip install pipenv && \
  PIPENV_VENV_IN_PROJECT=1 pipenv install --deploy && \
  pipenv run pip list && \
  ls -lah /.venv && \
  printenv && \
  ls -lah /.venv/lib/python3.9/site-packages

FROM docker.io/arm64v8/python:3.9-slim-bullseye
WORKDIR /app
# Copy the python packages because the distroless base image does
COPY --from=base /.venv/lib/python3.9/site-packages /app/site-packages
# Set the Python path where the interpreter will look for the packages
ENV PYTHONPATH=/app/site-packages \
  DEBIAN_FRONTEND=noninteractive LANGUAGE=C.UTF-8 LANG=C.UTF-8 LC_ALL=C.UTF-8 \
  LC_CTYPE=C.UTF-8 LC_MESSAGES=C.UTF-8
COPY src/sign_srv_fastapi.py certs/privatekey.pem certs/public.crt /app/
RUN \
  apt update && \
  apt install curl -y && \
  apt-get autoremove -yqq --purge && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/* && \
  python -m compileall && \
  find /app/ -type f -exec sha256sum {} +

# https://fastapi.tiangolo.com/deployment/docker/ :
CMD ["/usr/local/bin/python", "sign_srv_fastapi.py"]
EXPOSE 80
HEALTHCHECK --interval=13s --timeout=3s --start-period=2s --retries=3 \
  CMD /usr/bin/curl -sf 'http://localhost:80/healthz/container'
ARG VCS_REF
ENV VCS_REF=${VCS_REF} 
LABEL org.opencontainers.image.authors="Konstantin Babin" \
  org.opencontainers.image.source="github.com:babinkos/test-task-certsign-server-py/Dockerfile" \
  org.opencontainers.image.base.name="503110391064.dkr.ecr.eu-central-1.amazonaws.com/sign-svc" \
  org.opencontainers.image.revision="${VCS_REF}"
